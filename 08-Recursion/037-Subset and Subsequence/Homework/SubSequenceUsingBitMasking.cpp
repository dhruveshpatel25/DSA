/* Subsequences of String
You are given a string 'STR' containing lowercase English letters from a to z inclusive. 
Your task is to find all non-empty possible subsequences of 'STR'.

A Subsequence of a string is the one which is generated by deleting 0 or more letters from the string and keeping the rest of the letters in the same order.
https://www.naukri.com/code360/problems/subsequences-of-string_985087*/
#include<iostream>
#include<vector>
using namespace std;

vector<string> subsequence(string& str){

    //size of the string
    int size=str.size();

    //no.of subsequence by using formula 2^n
    int subsequencecount=(1<<size);

    //storing the answer
    vector<string> ans;

    //iterate through all the sunsequence
    for(int mask=0;mask<subsequencecount;mask++){

        //for current subsequence
        string subsequence="";

        //iterate through the complete array
        for(int i=0;i<size;i++){

            //check whether to include the current element or not
            //so if mask is 000 so dont include
            //if 001 include last element
            //if 011 include second and last element
            if((mask&(1<<i))!=0){

                //add to the string
                subsequence=subsequence+str[i];
            }
        }

        //push all the subseqence in answer
        ans.push_back(subsequence);
    }
    return ans;
}
int main() {
    string str = "abc"; 
    vector<string> result = subsequence(str);
    for (const auto& subset : result) {
        cout << "[ ";
        for (const auto& ch : subset) {
            cout << ch << " ";
        }
        cout << "]" ;
    }
    return 0;
}